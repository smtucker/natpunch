syntax = "proto3";

package api;





message Endpoint {
  string ip_address = 1;
  uint32 port = 2;
}

message Message {
  oneof content {
    RegisterRequest register_request = 1;
    RegisterResponse register_response = 2;

    ConnectRequest connect_request = 5;
    ConnectionInstruction connection_instruction = 6;
    ConnectionEstablished connection_established = 7;
    Error error = 8;
    KeepAlive keep_alive = 9;
    DebugMessage debug_message = 10;
    CreateLobbyRequest create_lobby_request = 11;
    CreateLobbyResponse create_lobby_response = 12;
    JoinLobbyRequest join_lobby_request = 13;
    JoinLobbyResponse join_lobby_response = 14;
    LobbyListRequest lobby_list_request = 15;
    LobbyListResponse lobby_list_response = 16;
    LobbyUpdate lobby_update = 17;
    Ping ping = 18;
    Pong pong = 19;
    LeaveLobbyRequest leave_lobby_request = 20;
    LeaveLobbyResponse leave_lobby_response = 21;
    PeerLeft peer_left = 22;
  }
}

enum NatType {
  UNKNOWN = 0;
  FULL_CONE = 1;
  RESTRICTED_CONE = 2;
  PORT_RESTRICTED_CONE = 3;
  SYMMETRIC = 4;
}

message ConnectRequest {
  string destination_client_id = 1;
  string source_client_id = 2;
  Endpoint local_endpoint = 3;
  uint32 attempt_number = 4;
}

message ConnectionInstruction {
  bool accepted = 1;
  string client_id = 2;
  string message = 3;
  NatType nat_type = 4;
  uint32 attempt_number = 5;
  Endpoint public_endpoint = 6;
  Endpoint local_endpoint = 7;
}

message ConnectionEstablished {
  string message = 1;
  string client_id = 2;
}

message RegisterRequest {
  Endpoint local_endpoint = 1;
}

message RegisterResponse {
  bool success = 1;
  Endpoint public_endpoint = 2;
  string client_id = 3;
  string message = 4;
}


message ClientInfo {
  string client_id = 1;
  Endpoint public_endpoint = 2;
}

message Error { string message = 1; }

message KeepAlive {
  string client_id = 1;
}

message DebugMessage { string message = 1; }

message CreateLobbyRequest {
  string lobby_name = 1;
  string client_id = 2;
  uint32 max_players = 3;
}

message CreateLobbyResponse {
  bool success = 1;
  string lobby_id = 2;
  string lobby_name = 3;
  string message = 4;
}

message JoinLobbyRequest {
  string lobby_id = 1;
  string client_id = 2;
}

message JoinLobbyResponse {
  bool success = 1;
  string lobby_id = 2;
  string message = 3;
  repeated ClientInfo lobby_members = 4;
}

message LobbyListRequest {
  string request_id = 1;
}

message LobbyListResponse {
  bool success = 1;
  string request_id = 2;
  repeated LobbyInfo lobbies = 3;
  string message = 4;
}

message LobbyInfo {
  string lobby_id = 1;
  string lobby_name = 2;
  string host_client_id = 3;
  uint32 current_players = 4;
  uint32 max_players = 5;
  repeated ClientInfo members = 6;
}

message LobbyUpdate {
  string lobby_id = 1;
  LobbyInfo lobby_info = 2;
  string update_type = 3; // "player_joined", "player_left", "lobby_closed"
}

message Ping {
  string source_client_id = 1;
  string destination_client_id = 2;
  uint32 sequence_number = 3;
}

message Pong {
  string source_client_id = 1;
  string destination_client_id = 2;
  uint32 sequence_number = 3;
}

message LeaveLobbyRequest {
  string lobby_id = 1;
  string client_id = 2;
}

message LeaveLobbyResponse {
  bool success = 1;
  string message = 2;
}

message PeerLeft {
  string client_id = 1;
}


